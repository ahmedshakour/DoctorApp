// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}


generator erd {
  provider = "prisma-erd-generator"
  theme    = "forest"
  output   = "../tools/ERD.svg"
}


generator trpc {
  provider       = "prisma-trpc-generator"
  output         = "../tools/trpc"
  withMiddleware = false
  withShield     = false
  contextPath    = "../context"
}



datasource db {
  provider = "sqlserver"
  url      = env("DATABASE_URL")
}




model User {
  id            Int             @id @default(autoincrement())
  email         String          @unique
  password      String
  displayname   String?
  provider      String?
  person        Person[]
  gender        Gender          @relation(fields: [genderId], references: [id], onDelete: NoAction, onUpdate: NoAction)
  genderId      Int
  receipt       Receipt[]
  roleForUser RoleForUser[]
  createdAt     DateTime        @default(now())
  updatedAt     DateTime?       @updatedAt
  isActive      Boolean         @default(true)
}

model Role {
  id            Int             @id @default(autoincrement())
  name          String
  roleForPerson RoleForUser[]
  createdAt     DateTime        @default(now())
  updatedAt     DateTime?       @updatedAt
  isActive      Boolean         @default(true)
}

model RoleForUser {
  id        Int       @id @default(autoincrement())
  user      User      @relation(fields: [userId], references: [id])
  userId    Int
  role      Role      @relation(fields: [roleId], references: [id])
  roleId    Int
  createdAt DateTime  @default(now())
  updatedAt DateTime? @updatedAt
  isActive  Boolean   @default(true)
}

model Gender {
  id        Int       @id @default(autoincrement())
  type      String?
  user      User[]
  Person    Person[]
  createdAt DateTime  @default(now())
  updatedAt DateTime? @updatedAt
  isActive  Boolean   @default(true)
}

model Person {
  id             Int       @id @default(autoincrement())
  name           String?
  phone          String?
  address        String
  dateOfbirthday DateTime
  user           User[]
  receipt        Receipt[]
  gender         Gender    @relation(fields: [genderId], references: [id])
  genderId       Int
  createdAt      DateTime  @default(now())
  updatedAt      DateTime? @updatedAt
  isActive       Boolean   @default(true)
}

model Receipt {
  id        Int       @id @default(autoincrement())
  drug      String?
  name      String?
  dose      String?
  freq      String?
  route     String?
  note      String?
  User      User?     @relation(fields: [userId], references: [id], onDelete: NoAction, onUpdate: NoAction)
  userId    Int?
  Person    Person?   @relation(fields: [personId], references: [id])
  personId  Int?
  createdAt DateTime  @default(now())
  updatedAt DateTime? @updatedAt
  isActive  Boolean   @default(true)
}
